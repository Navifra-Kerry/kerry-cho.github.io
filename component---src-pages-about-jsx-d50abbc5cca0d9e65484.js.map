{"version":3,"sources":["webpack://blogkerry/./src/components/PageTitle/PageTitle.jsx","webpack://blogkerry/./src/pages/about.jsx"],"names":["styles","count","fontSize","subheader","fontWeight","color","runninghead","mb","header","running","totalCount","variant","as","sx","imageWrapper","borderRadius","overflow","position","button","display","bottom","right","grid","flexWrap","ml","column","flex","flexBasis","props","data","useStaticQuery","aboutQuery","image","getImage","avatar","title"],"mappings":"2KAIMA,EAAS,CACbC,MAAO,CACLC,SAAU,GAEZC,UAAW,CACTC,WAAW,OACXC,MAAM,aAERC,YAAa,CACXF,WAAW,OACXC,MAAM,YACNE,GAAI,IA8BR,EA1BkB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQL,EAAqC,EAArCA,UAAWM,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC/C,OACE,oBACE,QAAC,KAAD,CAASC,QAAQ,KAAKC,GAAG,MACtBJ,EAAQ,IACRE,IACC,QAAC,KAAD,CAAOC,QAAQ,YAAYE,GAAIb,EAAOC,OACnC,IACAS,IAINP,IACC,QAAC,KAAD,CAAMQ,QAAQ,KAAKE,GAAIb,EAAOG,WAC3BA,GAGJM,IACC,QAAC,KAAD,CAAME,QAAQ,KAAKE,GAAIb,EAAOM,aAC3BG,M,+ICxBLT,EAAS,CACbc,aAAc,CACZC,aAAa,UACbC,SAAS,SACTC,SAAS,YAEXC,OAAQ,CACNC,QAAS,CAAC,OAAD,SACTF,SAAS,WACTG,OAAQ,EACRC,MAAO,GAETC,KAAM,CACJC,SAAU,CAAC,OAAQ,KAAT,UACV,eAAgB,CACdC,GAAI,CAAC,EAAG,EAAG,KAGfC,OAAQ,CACNC,KAAK,OACLC,UAAW,CAAC,OAAQ,KAAT,SAIf,mBAAeC,GACb,IAAMC,GAAOC,oBAAeC,GACtBC,GAAQC,OAASJ,EAAKK,QAE5B,OACE,QAAC,KAAWN,GACV,QAAC,IAAD,CAAKO,MAAM,WACX,QAAC,IAAD,OACA,QAAC,KAAD,MACE,QAAC,KAAD,MACE,QAAC,IAAD,CACE3B,OAAO,WACPL,UAAU,MAEZ,QAAC,IAAD,OACA,QAAC,KAAD,CAAKU,GAAIb,EAAOc,eACd,QAAC,IAAD,CAAKkB,MAAOA,MAEd,QAAC,IAAD,OACA,QAAC,KAAD,CAAMnB,GAAIb,EAAOsB,OACf,QAAC,KAAD,CAAKT,GAAIb,EAAOyB,SACd,QAAC,IAAD,CAASU,MAAM,aACb,QAAC,KAAD,CAAMxB,QAAQ,KAAd,6EAKJ,QAAC,KAAD,CAAKE,GAAIb,EAAOyB,SACd,QAAC,IAAD,CAASU,MAAM,oBAEf,QAAC,IAAD,CAASA,MAAM,oBAU7B,IAAMJ,EAAU","file":"component---src-pages-about-jsx-d50abbc5cca0d9e65484.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Heading, Text, Badge } from 'theme-ui';\r\n\r\nconst styles = {\r\n  count: {\r\n    fontSize: 4\r\n  },\r\n  subheader: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`\r\n  },\r\n  runninghead: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`,\r\n    mb: 0\r\n  }\r\n};\r\n\r\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\r\n  return (\r\n    <div>\r\n      <Heading variant='h1' as='h1'>\r\n        {header}{' '}\r\n        {totalCount && (\r\n          <Badge variant='tag-white' sx={styles.count}>\r\n            {' '}\r\n            {totalCount}\r\n          </Badge>\r\n        )}\r\n      </Heading>\r\n      {subheader && (\r\n        <Text variant='h3' sx={styles.subheader}>\r\n          {subheader}\r\n        </Text>\r\n      )}\r\n      {running && (\r\n        <Text variant='h4' sx={styles.runninghead}>\r\n          {running}\r\n        </Text>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  totalCount: PropTypes.number\r\n};\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { GatsbyImage as Img, getImage } from 'gatsby-plugin-image';\r\nimport { Box, Text, Card, Flex, Button } from 'theme-ui';\r\nimport { Layout, Stack, Main } from '../layout';\r\nimport PageTitle from '../components/PageTitle';\r\nimport Divider from '../components/Divider';\r\nimport Section from '../components/Section';\r\nimport Seo from '../widgets/Seo';\r\n\r\n/**\r\n * Shadow me to add your own content\r\n */\r\n\r\nconst styles = {\r\n  imageWrapper: {\r\n    borderRadius: `default`,\r\n    overflow: `hidden`,\r\n    position: `relative`\r\n  },\r\n  button: {\r\n    display: [`none`, `block`],\r\n    position: `absolute`,\r\n    bottom: 4,\r\n    right: 4\r\n  },\r\n  grid: {\r\n    flexWrap: [`wrap`, null, `nowrap`],\r\n    ' > div + div': {\r\n      ml: [0, 0, 5]\r\n    }\r\n  },\r\n  column: {\r\n    flex: `auto`,\r\n    flexBasis: [`full`, null, `1/2`]\r\n  }\r\n};\r\n\r\nexport default props => {\r\n  const data = useStaticQuery(aboutQuery);\r\n  const image = getImage(data.avatar);\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Seo title='About' />\r\n      <Divider />\r\n      <Stack>\r\n        <Main>\r\n          <PageTitle\r\n            header='About Me'\r\n            subheader=''\r\n          />\r\n          <Divider />\r\n          <Box sx={styles.imageWrapper}>\r\n            <Img image={image} />\r\n          </Box>\r\n          <Divider />\r\n          <Flex sx={styles.grid}>\r\n            <Box sx={styles.column}>\r\n              <Section title='My Story'>\r\n                <Text variant='p'>\r\n                Machine Vision 분야에서 약 10년간 근무 경험이 있으며 현재는 AMHS 분야에서 개발 업무에 종사 하고 있습니다.\r\n                </Text>\r\n              </Section>\r\n            </Box>\r\n            <Box sx={styles.column}>\r\n              <Section title='Machine Vision'>\r\n              </Section>\r\n              <Section title='FullStack'>\r\n              </Section>\r\n            </Box>\r\n          </Flex>\r\n        </Main>\r\n      </Stack>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst aboutQuery = graphql`\r\n  query AboutQuery {\r\n    avatar: file(absolutePath: { regex: \"/about.(jpeg|jpg|gif|png)/\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(\r\n          width: 1140\r\n          height: 500\r\n          transformOptions: { cropFocus: NORTH }\r\n        )\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}